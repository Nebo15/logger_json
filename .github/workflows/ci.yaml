name: CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  merge_group:
  workflow_call:
    secrets:
      GH_PERSONAL_ACCESS_TOKEN:
        required: true
      HEX_API_KEY:
        required: true
  workflow_dispatch:

jobs:
  Credo:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}

      - name: Credo
        run: mix credo

  Deps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}

      - name: Unused
        run: mix deps.unlock --check-unused

  Dialyzer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}

      - name: Dialyzer
        run: mix dialyzer --format github

  Docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}

      - name: Docs
        run: mix docs

  Format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}

      - name: Format
        run: mix format --check-formatted

  Test:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MIX_ENV: test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir
        uses: stordco/actions-elixir/setup@v1
        with:
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          hex-token: ${{ secrets.HEX_API_KEY }}

      - name: Compile
        run: mix compile --warnings-as-errors

      - name: Test
        run: mix test
